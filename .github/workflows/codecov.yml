# This is a basic workflow to help you get started with Actions

name: Codecov

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
          node-version: ${{ matrix.node-version }}
    - name: Codecov
      uses: codecov/codecov-action@v1.0.12
    - name: Cache node_modules
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      uses: actions/cache@v1
      env:
          cache-name: cache-node-modules
      with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    - name: Install dependencies
      run: npm ci
    - name: Test
      run: npm run test:codecov
    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        # User defined upload name. Visible in Codecov UI
        name: Discord Bot - Roux
        # Directory to search for coverage reports.
        directory: coverage
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: true
        token : ${{ secrets.CODECOV_TOKEN }}
